{"version":3,"sources":["assets/black_mag.png","assets/deadlifting.png","context.js","hooks/Today.js","hooks/Footer.js","hooks/Navbar.js","hooks/Modal/MyVerticallyCenteredModal.js","hooks/Modal/ModalButton.js","hooks/TitleBar.js","hooks/MyWeek.js","hooks/SearchBar.js","hooks/Exercises.js","hooks/IntroContent.js","config/Fire.js","App.js","index.js"],"names":["module","exports","Context","React","createContext","Today","props","useState","events","updateEvents","ref","firebase","database","uid","Intl","DateTimeFormat","weekday","format","today","useEffect","on","snapshot","forEach","date","cur","Date","key","getUTCDate","getUTCMonth","getUTCFullYear","exercise","entry","val","eventObject","restDay","id","title","start","color","sets","reps","weight","measurement","prevEvents","off","className","to","defaultView","dayCount","header","left","center","right","titleFormat","columnHeader","eventRender","info","el","querySelector","innerHTML","event","plugins","dayGridPlugin","Footer","href","target","class","Navbar","children","MyVerticallyCenteredModal","setMeasurement","handleClick","onHide","document","value","rest","inputs","querySelectorAll","modalcontent","data","name","input","push","set","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","type","ButtonToolbar","ToggleButtonGroup","defaultValue","onChange","e","ToggleButton","Button","onClick","ModalButton","modalShow","setModalShow","Fragment","variant","Consumer","userID","show","TitleBar","MyWeek","day","SearchBar","handlePress","onKeyPress","placeholder","Exercises","results","updateResults","isLoading","setIsLoading","getExercises","api_url","a","console","log","fetch","then","exercises","json","suggestions","length","map","item","previousSibling","Spinner","animation","IntroContent","require","config","fire","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","isSignedIn","setIsSignedIn","setUserID","now","month","location","useLocation","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","onAuthStateChanged","user","Provider","exact","activeClassName","signOut","pathname","getFullYear","path","firebaseAuth","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.faf95f79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/black_mag.57ddca17.png\";","module.exports = __webpack_public_path__ + \"static/media/deadlifting.99b26a50.png\";","import React from \"react\"\r\nconst Context = React.createContext()\r\nexport default Context\r\n","import React, {useEffect, useState} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport firebase from \"firebase\"\r\n\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport '@fullcalendar/core/main.css'\r\n\r\nconst Today = (props) => {\r\n\r\n    let [events, updateEvents] = useState([])\r\n    var ref = firebase.database().ref(`/users/${props.uid}/logs`)                 // get a reference to the logs section of data in the firebase RTDB \r\n\r\n    var options = { weekday: 'long'};\r\n    const theDay = new Intl.DateTimeFormat('en-US', options).format(props.today)  // from mdn docs https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay\r\n                                                                                  // converts day number to actual day (e.g. 5 to Friday)\r\n    \r\n    function buildEvent() {\r\n        ref.on('value', (snapshot) => {\r\n            snapshot.forEach(date => {\r\n                let cur = new Date(date.key)\r\n                if(\r\n                       cur.getUTCDate() === props.today.getUTCDate() \r\n                    && cur.getUTCMonth() === props.today.getUTCMonth()            // ugly but, I'm not sure how to make this better\r\n                    && cur.getUTCFullYear() === props.today.getUTCFullYear()      // compare day, month, and year \r\n                )\r\n                {\r\n                    date.forEach(exercise => {                                    // grab each EXERCISE logged on that DATE        \r\n                        let entry = exercise.val()                  \r\n                        let eventObject = {}\r\n                        if(entry.restDay) {\r\n                            eventObject = {\r\n                                id: exercise.key,                                 // ----------------------------\r\n                                title: \"<h1>Rest Day</h1>\",                                // Check if today is a rest day\r\n                                start: date.key,                                  // ----------------------------\r\n                                color: '#D4F6FF'\r\n                            }\r\n                        }\r\n                        else eventObject = \r\n                        {\r\n                            id: exercise.key,                                     // parse it into an Event Object so the <Calendar /> component can read it \r\n                            title: `<b>${entry.exercise}</b>\r\n                                    <ul class=\"entry\">\r\n                                        <li>Sets: ${entry.sets}</li>\r\n                                        <li>Reps: ${entry.reps}</li>\r\n                                        <li>Weight: ${entry.weight} ${entry.measurement}</li>\r\n                                    <ul>`,                  \r\n                            start: date.key,\r\n                            reps: entry.reps,\r\n                            color: '#D4F6FF'\r\n                        }\r\n                        updateEvents(prevEvents => {\r\n                            return [...prevEvents, eventObject]                   // update the events state so that the calendar will also be updated \r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }     \r\n\r\n    useEffect(() => {\r\n        buildEvent()\r\n        return () => ref.off()                                      // remove listeners from the DB reference\r\n    }, []) \r\n    \r\n    function allowHTML (info) {\r\n        info.el.querySelector('.fc-title').innerHTML = info.event.title;         // allow html in the title\r\n    }\r\n\r\n    return (\r\n        <div className=\"today\">\r\n            <Link to=\"/exercises\">\r\n                <button className=\"add-exercise\">Add Exercise +</button>\r\n            </Link>\r\n            <FullCalendar \r\n                        defaultView='dayGrid'\r\n                        dayCount={1}\r\n                        header={{left: '', center: 'title', right: ''}}     // re-use the calendar component and only display a single day\r\n                        titleFormat={{weekday: 'long'}}\r\n                        columnHeader={false}\r\n                        events={events}\r\n                        eventRender={allowHTML}\r\n                        plugins={[ dayGridPlugin ]} \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Today ","import React from \"react\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer id=\"footer\">\r\n            <div className=\"in-touch\"> \r\n                <a href=\"https://rjfuhrman42.github.io/Portfolio-Website/\" target=\"_blank\">\r\n                    Get in touch\r\n                </a>\r\n            </div>\r\n            <div>\r\n                <ul className=\"socials\">\r\n                        <li>\r\n                            <a href=\"https://github.com/rjfuhrman42\" target=\"_blank\">\r\n                                <i class=\"ri-github-fill ri-xl\"></i>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"https://www.linkedin.com/in/reid-fuhrman-73324b180/\" target=\"_blank\">\r\n                                <i class=\"ri-linkedin-box-fill ri-xl\"></i>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"mailto:reidjf77@gmail.com\" target=\"_blank\">\r\n                            <i class=\"ri-mail-fill ri-xl\"></i>\r\n                            </a>\r\n                        </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"api\">\r\n                <a href=\"https://wger.de/en/software/api\" target=\"_blank\">\r\n                    wger API\r\n                </a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer ","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <header>\r\n            <div className=\"my-container\">\r\n                <Link to=\"/\">\r\n                    <h1 className=\"main-heading\">Lift Tracker</h1>\r\n                </Link>\r\n                <nav>\r\n                    <ul className=\"nav-options\">\r\n                        {props.children}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, {useState} from \"react\"\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\r\n\r\nimport firebase from \"firebase\"\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n\r\n  var [measurement, setMeasurement] = useState('lbs');\r\n\r\n  function handleClick() {\r\n    props.onHide()\r\n\r\n    let entry = {\r\n      'measurement': measurement                                  // set the measurement based on the state (kilograms vs pounds)\r\n    }\r\n\r\n    let today = document.querySelector('input[name=date]').value\r\n\r\n    if(props.rest === 'true') {        \r\n      entry = {'restDay': true}                                                             // its a Rest day\r\n    }\r\n    else {\r\n      let inputs = document.querySelectorAll('.entry')                                      // grab all the inputs\r\n      \r\n      entry['exercise'] = props.modalcontent.data.name;                                     // set the name of the exercise\r\n      inputs.forEach(input => entry[input.name] = input.value)                              // set the values of the inputs\r\n    }\r\n\r\n    var todayRef = firebase.database().ref(`/users/${props.uid}/logs/${today}`).push();     // allows us to add multiple exercise entries\r\n    todayRef.set(entry)                                                                     // log the entry into the firebase db\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setMeasurement(e)\r\n  }\r\n  if(props.rest === 'true' && !props.modalcontent) {\r\n    return (\r\n      <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Rest Day\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form>\r\n          <h4>When?</h4>\r\n          <input type=\"date\"\r\n                name=\"date\" \r\n                >\r\n          </input>\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={handleClick}>Save</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n    )\r\n  }\r\n  else return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            {props.modalcontent.data.name}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form>\r\n\r\n            <h4>How much weight?</h4>\r\n            <input type=\"number\" \r\n                  name=\"weight\" \r\n                  className=\"entry\"\r\n                   >\r\n            </input> \r\n\r\n            <ButtonToolbar>\r\n              <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={measurement} onChange={handleChange}> \r\n                 <ToggleButton value=\"lbs\">lbs</ToggleButton>\r\n                 <ToggleButton value=\"kgs\">kgs</ToggleButton>\r\n              </ToggleButtonGroup>\r\n            </ButtonToolbar>\r\n\r\n          <h4>How many sets?</h4>\r\n          <input type=\"number\" \r\n                 name=\"sets\" \r\n                 className=\"entry\"\r\n                 >\r\n          </input>\r\n\r\n          <h4>How many reps?</h4>\r\n          <input type=\"number\" \r\n                 name=\"reps\" \r\n                 className=\"entry\"\r\n                 >\r\n          </input>\r\n\r\n          <h4>When?</h4>\r\n          <input type=\"date\"\r\n                 name=\"date\" \r\n                 >\r\n          </input>\r\n\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={handleClick}>Save</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n\r\n  export default MyVerticallyCenteredModal\r\n  ","import React, {useState} from \"react\"\r\nimport MyVerticallyCenteredModal from './MyVerticallyCenteredModal'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Context from \"../../context\"\r\n\r\nfunction ModalButton(props) {\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n        {props.rest === \"true\" ? \"Add Rest Day\" : \"+\"}\r\n      </Button>\r\n      <Context.Consumer>\r\n        {(userID) => (\r\n                <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                uid={userID}\r\n                modalcontent={props.modalcontent}\r\n                rest={props.rest}\r\n                onHide={() => setModalShow(false)}\r\n              />\r\n        )}\r\n      </Context.Consumer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ModalButton\r\n","import React from \"react\"\r\nimport ModalButton from './Modal/ModalButton';\r\n\r\nfunction TitleBar(props) {\r\n    return (\r\n        <div className=\"title-bar\">\r\n            <ModalButton rest=\"true\"/>\r\n            <h2>{props.children}</h2> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleBar","import React, {useState, useEffect} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport TitleBar from \"./TitleBar\"\r\nimport firebase from \"firebase\"\r\n\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport '@fullcalendar/core/main.css'\r\n\r\n\r\nfunction MyWeek(props) {\r\n\r\n    let [events, updateEvents] = useState([])\r\n    var ref = firebase.database().ref(`/users/${props.uid}/logs`)   // get a reference to the logs section of data in the firebase RTDB \r\n    \r\n\r\n    function buildEvent()\r\n    {\r\n        ref.on('value', (snapshot) => {                                                                                           \r\n            snapshot.forEach(date => {                              // for each DATE in logged in the user's logs                       \r\n                    date.forEach(exercise => {                      // grab each EXERCISE logged on that DATE        \r\n                        let entry = exercise.val()    \r\n                        let eventObject = {}\r\n                        \r\n                        if(entry.restDay) {\r\n                            eventObject = {\r\n                                id: exercise.key,                      \r\n                                title: \"<h1>Rest Day</h1>\",                    \r\n                                start: date.key,\r\n                                color: '#D4F6FF'\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            eventObject = \r\n                            {\r\n                                id: exercise.key,                       // parse it into an Event Object so the <Calendar /> component can read it \r\n                                title: `\r\n                                        <b>${entry.exercise}</b>\r\n                                        <ul class=\"entry\">\r\n                                            <li>Sets: ${entry.sets}</li>\r\n                                            <li>Reps: ${entry.reps}</li>\r\n                                            <li>Weight: ${entry.weight} ${entry.measurement}</li>\r\n                                        <ul>\r\n                                        `,                \r\n                                start: date.key,\r\n                                reps: entry.reps,\r\n                                color: '#D4F6FF'\r\n                            }\r\n                        }               \r\n                \r\n                        updateEvents(prevEvents => {\r\n                            return [...prevEvents, eventObject]     // update the events state so that the calendar will also be updated \r\n                        })\r\n                    })\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        buildEvent()\r\n        return () => ref.off()                                      // remove listeners from the DB reference\r\n    }, [])\r\n\r\n    function allowHTML (info) {\r\n        info.el.querySelector('.fc-title').innerHTML = info.event.title;         // allow html in the title\r\n    }\r\n\r\n    return (\r\n        <div className=\"my-week\">\r\n            <Link to=\"/exercises\">\r\n                <button className=\"add-exercise\">Add Exercise +</button>\r\n            </Link>\r\n            <FullCalendar \r\n                        defaultView=\"dayGridWeek\" \r\n                        header={{left:   '',center: '',right:  'today prev,next'}}\r\n                        titleFormat={{day: 'numeric'}}\r\n                        events={events}\r\n                        eventRender={allowHTML}\r\n                        plugins={[ dayGridPlugin ]} \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyWeek","import React from \"react\"\r\nimport icon from \"../assets/black_mag.png\"\r\n\r\nfunction SearchBar({handlePress, handleClick})\r\n{\r\n    return(\r\n        <div className=\"search_bar\">\r\n            <input \r\n                type=\"text\" \r\n                className=\"search\" \r\n                onKeyPress={handlePress} \r\n                placeholder=\"type an exercise name to get results...\"\r\n            />\r\n            <button onClick={handleClick} className=\"search-button\">\r\n                \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar","import React, {useState} from \"react\"\r\nimport SearchBar from \"./SearchBar\"\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport ModalButton from './Modal/ModalButton';\r\n\r\nfunction Exercises() {\r\n\r\n    const [results, updateResults] = useState(\"\")\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    async function getExercises(api_url)\r\n    {\r\n        console.log(api_url)\r\n        setIsLoading(true);\r\n        fetch(api_url)\r\n        .then(exercises => exercises.json())\r\n        .then(data => {\r\n            console.log(data.suggestions)\r\n            setIsLoading(false)\r\n                        if(data.suggestions.length === 0) updateResults(<li>No results found!</li>)\r\n                        else\r\n                        updateResults(data.suggestions\r\n                        .map(item => \r\n\r\n                            <li key={item.data.id}>\r\n                                <div className=\"ex-name\">\r\n                                    {item.data.name}\r\n                                </div>\r\n                                <ModalButton modalcontent={item}>add</ModalButton>\r\n                            </li>))\r\n                      })\r\n    }\r\n\r\n    const handlePress = (e) => {\r\n        if(e.key === \"Enter\" && e.target.value) // check if enter key is pressed and if the search query defined\r\n        {\r\n            getExercises(`https://wger.de//api/v2/exercise/search/?term=${e.target.value}`)\r\n        } \r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        if(e.target.previousSibling.value)\r\n         getExercises(`https://wger.de//api/v2/exercise/search/?term=${e.target.previousSibling.value}`) // The sibling element is the input box\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* <ModalButton rest=\"true\"/> */}\r\n            <div>\r\n                <SearchBar \r\n                            handlePress={handlePress}\r\n                            handleClick={handleClick}\r\n                />\r\n            </div>\r\n            \r\n            <ul className=\"results-list\">\r\n                {isLoading ? <li><Spinner animation=\"border\" /></li> : results} \r\n            </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Exercises","import React from \"react\"\r\nimport image from \"../assets/deadlifting.png\"\r\n\r\nconst IntroContent = (props) => {\r\n    return (\r\n        <div className=\"intro-content-container\">\r\n            {/* <img src={image} alt=\"man-deadlifting\"/> */}\r\n            <div className=\"intro-text\">\r\n                <div className=\"intro-heading\">Track Your Progress</div>\r\n                <div className=\"intro-leadin\">Get Better Results</div>\r\n            </div>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IntroContent","import firebase from \"firebase\";\r\n\r\nrequire('dotenv').config();\r\n\r\n  var firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_LIFT_TRACKER_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_LIFT_TRACKER_FIREBASE_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_LIFT_TRACKER_FIREBASE_DATABASE,\r\n    projectId: process.env.REACT_APP_LIFT_TRACKER_FIREBASE_KEY,\r\n    storageBucket: process.env.REACT_APP_LIFT_TRACKER_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_LIFT_TRACKER_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_LIFT_TRACKER_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_LIFT_TRACKER_FIREBASE_MEASUREMENT_ID\r\n  };\r\n  // Initialize Firebase\r\n  const fire = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fire;\r\n// ","import React, {useState, useEffect} from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport Context from \"./context\"\r\n\r\nimport Today from \"./hooks/Today\"\r\nimport Footer from \"./hooks/Footer\"\r\nimport Navbar from \"./hooks/Navbar\"\r\nimport MyWeek from \"./hooks/MyWeek\"\r\nimport TitleBar from \"./hooks/TitleBar\"\r\nimport Exercises from \"./hooks/Exercises\"\r\nimport IntroContent from \"./hooks/IntroContent\"\r\n\r\nimport firebase from \"firebase\"\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\nimport fire from \"./config/Fire\"\r\n\r\nfunction App() {\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n  const [userID, setUserID] = useState();\r\n\r\n  const today = new Date(Date.now())                                      // get Todays full date\r\n  var options = { month: 'long'};                                         // So we can get the month into the proper format\r\n  const month = new Intl.DateTimeFormat('en-US', options).format(today)\r\n\r\n  let location = useLocation();\r\n  \r\n  const uiConfig = {\r\n    signInFlow: 'popup',\r\n    signInOptions: [                              // this is needed to style the google sign in button\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n    ]\r\n  }\r\n\r\n  useEffect(() => {                               // check if the user is logged in on page load \r\n      fire.auth().onAuthStateChanged((user) => {\r\n\r\n      // if the user is logged in set is to be true\r\n      if(user){\r\n                setIsSignedIn(true)  \r\n                setUserID(user.uid)  \r\n      }\r\n      else setIsSignedIn(false);\r\n    })\r\n  }, [])\r\n\r\n  // user is signed in (and their ID has been set) return their contents, wrap in the context provider, so that we can provide components with the USERID\r\n  \r\n  if(isSignedIn && userID) return (\r\n    <Context.Provider value={userID}>\r\n      <div className=\"App\">\r\n        <Navbar>\r\n          <li>\r\n            <NavLink to=\"/\" exact={true} activeClassName=\"selected\"> Today </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/myweek\" activeClassName=\"selected\"> My Week </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/exercises\" activeClassName=\"selected\"> Exercises </NavLink>\r\n          </li>\r\n          <li>\r\n            <button onClick={() => fire.auth().signOut()} className=\"sign-out-btn\">Sign out</button> \r\n          </li>                                            \r\n        </Navbar>\r\n        \r\n        <TitleBar>{location.pathname === '/exercises' ? 'Exercise Search' : `${month} ${today.getFullYear()}`}</TitleBar>\r\n        \r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Today uid={userID} today={today}/>\r\n          </Route>\r\n          <Route path=\"/myweek\">\r\n            <MyWeek uid={userID}/>\r\n          </Route>\r\n          <Route path=\"/exercises\">\r\n            <Exercises />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    </Context.Provider>\r\n  )\r\n\r\n  // otherwise render the main page\r\n  else return (\r\n    <div className=\"App\">\r\n        <Navbar>\r\n          <li>About</li> \r\n          {/* <li>\r\n            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={fire.auth()}/>\r\n          </li> */}\r\n\r\n        </Navbar>\r\n        <IntroContent>\r\n          <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={fire.auth()}/>\r\n        </IntroContent>\r\n        <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/firebaseui-styling.global.css'; \nimport './css/style.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router>\n                    <App />\n                </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}